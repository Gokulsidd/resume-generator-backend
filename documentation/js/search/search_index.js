var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.505,1,1.716]],["body/controllers/AppController.html",[0,2.401,1,2.738,2,1.94,3,0.723,4,0.626,5,0.626,6,3.01,7,0.723,8,2.738,9,4.225,10,1.52,11,0.046,12,1.199,13,3.703,14,2.213,15,1.484,16,1.023,17,1.52,18,2.303,19,3.01,20,0.723,21,0.091,22,3.01,23,2.553,24,2.213,25,3.703,26,0.037,27,0.037]],["title/modules/AppModule.html",[28,1.505,29,1.716]],["body/modules/AppModule.html",[1,2.791,2,2.203,3,0.631,4,0.546,5,0.546,11,0.046,16,1.174,17,1.327,18,2.432,19,2.628,20,0.631,21,0.08,26,0.034,27,0.034,28,2.448,29,3.242,30,1.694,31,1.694,32,2.23,33,2.23,34,1.694,35,3.221,36,2.23,37,2.628,38,2.628,39,2.628,40,2.754,41,2.899,42,2.23,43,2.23,44,3.233,45,3.417,46,3.233,47,3.233,48,2.628,49,1.047,50,3.233,51,3.233,52,3.233]],["title/injectables/AppService.html",[18,1.329,53,1.505]],["body/injectables/AppService.html",[3,0.754,4,0.653,5,0.653,7,0.754,8,2.811,9,4.288,11,0.046,12,1.252,14,2.31,15,1.523,16,0.863,17,1.586,18,2.177,20,0.754,21,0.095,24,2.31,26,0.038,27,0.038,53,2.465,54,2.665,55,3.142,56,3.865,57,3.865,58,3.865]],["title/classes/CreateFormDto.html",[21,0.071,59,1.329]],["body/classes/CreateFormDto.html",[3,0.834,4,0.722,5,0.722,11,0.043,20,0.834,21,0.106,26,0.04,27,0.04,59,2.312,60,1.558,61,3.474,62,2.947]],["title/classes/Education.html",[21,0.071,63,1.178]],["body/classes/Education.html",[3,0.326,4,0.282,5,0.282,7,0.326,10,1.494,11,0.047,12,1.179,15,1.785,16,0.719,20,0.948,21,0.098,26,0.021,27,0.021,49,0.541,60,0.609,63,1.494,64,0.609,65,1.072,66,1.687,67,1.687,68,1.687,69,1.687,70,1.641,71,2.176,72,2.588,73,1.669,74,1.669,75,1.669,76,1.669,77,2.918,78,2.196,79,0.875,80,1.369,81,0.685,82,0.875,83,1.49,84,0.685,85,0.846,86,1.369,87,1.369,88,1.369,89,1.369,90,1.321,91,2.84,92,0.875,93,0.875,94,0.875,95,0.875,96,0.875,97,0.875,98,1.829,99,1.072,100,0.773,101,1.072,102,0.773,103,1.72,104,0.685,105,0.875,106,1.72,107,0.773,108,1.321,109,2.099,110,0.875,111,0.875,112,0.875,113,0.875,114,0.875,115,1.072,116,0.773,117,0.875,118,0.875,119,0.875,120,0.875,121,0.875,122,0.875,123,0.875,124,0.875,125,0.875,126,0.875,127,0.875,128,0.875,129,0.875,130,0.685,131,0.773]],["title/classes/Form.html",[21,0.071,85,0.93]],["body/classes/Form.html",[3,0.266,4,0.23,5,0.23,7,0.266,10,2.009,11,0.047,12,1.585,15,1.785,16,0.628,20,0.895,21,0.088,26,0.018,27,0.018,49,0.441,60,0.497,63,1.572,64,0.497,65,0.911,66,0.714,67,0.714,68,0.714,69,0.714,70,1.712,71,2.74,72,2.58,77,2.853,78,2.007,79,0.714,80,1.164,81,0.559,82,0.714,83,1.501,84,0.559,85,0.91,86,1.164,87,1.164,88,1.164,89,1.164,90,1.572,91,2.77,92,0.714,93,0.714,94,0.714,95,0.714,96,0.714,97,0.714,98,1.653,99,0.911,100,0.63,101,0.911,102,0.63,103,1.572,104,0.559,105,0.714,106,1.572,107,0.63,108,1.572,109,2.122,110,0.714,111,0.714,112,0.714,113,0.714,114,0.714,115,1.154,116,0.63,117,1.164,118,1.473,119,1.473,120,1.473,121,1.473,122,1.473,123,1.473,124,1.473,125,1.473,126,1.473,127,1.473,128,1.473,129,1.473,130,0.559,131,0.63,132,1.362,133,1.362,134,2.635,135,2.635,136,1.362,137,1.362,138,1.362,139,1.362,140,1.362,141,1.362,142,1.362,143,1.362,144,1.362,145,1.362,146,1.362,147,1.362,148,1.362]],["title/controllers/FormController.html",[0,1.505,149,1.716]],["body/controllers/FormController.html",[0,1.261,2,1.261,3,0.47,4,0.407,5,0.407,7,0.47,8,2.053,10,1.898,11,0.047,12,1.497,14,2.763,15,1.692,16,0.976,17,0.988,20,0.47,21,0.059,22,1.956,23,1.66,24,2.763,26,0.028,27,0.028,59,2.225,70,1.416,85,0.779,104,1.794,149,2.053,150,1.956,151,2.407,152,2.37,153,3.554,154,2.793,155,2.793,156,2.793,157,1.956,158,4.008,159,2.407,160,3.554,161,3.554,162,3.436,163,3.436,164,2.407,165,1.956,166,3.436,167,2.407,168,3.908,169,1.956,170,3.436,171,2.407,172,1.956,173,2.652,174,3.436,175,2.407,176,3.436,177,2.407,178,2.407,179,2.407,180,1.855,181,1.956,182,1.956,183,2.37,184,1.956,185,2.407,186,2.407,187,2.407,188,2.407,189,2.407,190,2.407,191,2.407,192,2.407,193,2.407,194,2.407,195,2.407,196,2.407]],["title/modules/FormModule.html",[28,1.505,40,1.505]],["body/modules/FormModule.html",[2,2.232,3,0.644,4,0.558,5,0.558,11,0.046,16,1.152,17,1.354,20,0.644,21,0.082,26,0.034,27,0.034,28,2.472,30,1.729,31,1.729,32,2.275,33,2.275,34,1.729,35,3.253,36,3.253,40,2.817,41,2.937,42,2.275,43,2.275,45,2.682,48,2.682,49,1.069,149,2.818,180,2.602,181,2.682,197,2.682,198,2.682,199,2.682,200,3.299,201,3.299,202,3.299,203,3.299,204,3.299,205,3.299]],["title/injectables/FormService.html",[53,1.505,180,1.329]],["body/injectables/FormService.html",[3,0.411,4,0.356,5,0.356,7,0.411,8,1.862,11,0.047,12,1.486,14,2.618,15,1.613,16,1.025,17,0.864,20,0.411,21,0.052,23,1.451,24,2.452,26,0.025,27,0.025,49,0.681,53,1.633,54,1.451,59,2.028,70,1.419,72,0.974,81,0.864,84,0.864,85,1.329,98,1.899,104,1.798,152,2.149,153,3.335,154,2.533,155,2.533,156,2.533,157,2.533,160,3.561,161,3.561,165,2.533,168,4.048,169,2.533,172,2.533,173,2.555,180,1.442,182,1.71,183,2.149,184,1.71,206,1.71,207,5.345,208,3.116,209,2.104,210,4.103,211,2.104,212,3.116,213,2.104,214,5.066,215,2.104,216,2.104,217,2.104,218,2.104,219,2.104,220,2.104,221,2.104,222,2.104,223,2.104,224,2.104,225,3.561,226,2.104,227,2.104,228,2.104,229,3.711,230,2.104,231,3.711,232,3.711,233,3.711,234,3.711,235,2.104,236,2.104,237,3.116,238,2.104]],["title/classes/Skill.html",[21,0.071,103,1.178]],["body/classes/Skill.html",[3,0.339,4,0.293,5,0.293,7,0.339,10,1.105,11,0.047,12,0.872,15,1.783,16,0.737,20,0.958,21,0.099,26,0.022,27,0.022,49,0.562,60,0.633,63,1.354,64,0.633,65,1.105,66,0.909,67,0.909,68,0.909,69,0.909,70,1.614,71,1.609,72,2.587,77,2.929,78,2.232,79,0.909,80,1.411,81,0.712,82,0.909,83,1.527,84,0.712,85,0.872,86,1.411,87,1.411,88,1.411,89,1.411,90,1.354,91,2.855,92,0.909,93,0.909,94,0.909,95,0.909,96,0.909,97,0.909,98,1.863,99,1.105,100,0.803,101,1.105,102,0.803,103,1.824,104,1.354,105,1.729,106,1.748,107,0.803,108,1.354,109,2.126,110,0.909,111,0.909,112,0.909,113,0.909,114,0.909,115,1.105,116,0.803,117,0.909,118,0.909,119,0.909,120,0.909,121,0.909,122,0.909,123,0.909,124,0.909,125,0.909,126,0.909,127,0.909,128,0.909,129,0.909,130,0.712,131,0.803,239,1.735,240,1.735]],["title/classes/Skills.html",[21,0.071,108,1.178]],["body/classes/Skills.html",[3,0.314,4,0.272,5,0.272,7,0.314,10,1.595,11,0.047,12,1.258,15,1.754,16,0.703,20,0.939,21,0.096,26,0.02,27,0.02,49,0.522,60,0.587,63,1.291,64,0.587,65,1.043,66,0.844,67,0.844,68,0.844,69,0.844,70,1.646,72,2.555,77,2.907,78,2.164,79,0.844,80,1.331,81,0.661,82,0.844,83,1.456,84,0.661,85,0.823,86,1.331,87,1.331,88,1.331,89,1.331,90,1.291,91,2.826,92,0.844,93,0.844,94,0.844,95,0.844,96,0.844,97,0.844,98,1.799,99,1.043,100,0.746,101,1.043,102,0.746,103,1.975,104,0.661,105,0.844,106,1.695,107,0.746,108,1.466,109,2.298,110,1.648,111,1.648,112,1.648,113,1.648,114,1.648,115,1.043,116,0.746,117,0.844,118,0.844,119,0.844,120,0.844,121,0.844,122,0.844,123,0.844,124,0.844,125,0.844,126,0.844,127,0.844,128,0.844,129,0.844,130,0.661,131,0.746,134,3.159,135,3.836,241,1.611,242,1.611,243,1.611,244,1.611,245,1.611]],["title/classes/UpdateFormDto.html",[21,0.071,173,1.505]],["body/classes/UpdateFormDto.html",[3,0.779,4,0.675,5,0.675,11,0.045,16,1.071,20,0.779,21,0.099,26,0.039,27,0.039,59,1.848,60,1.456,62,2.753,152,2.753,173,2.514,183,2.753,246,3.245,247,4.796,248,4.796,249,3.992,250,3.245,251,3.245]],["title/classes/WorkExperience.html",[21,0.071,90,1.178]],["body/classes/WorkExperience.html",[3,0.314,4,0.272,5,0.272,7,0.314,10,1.693,11,0.047,12,1.336,15,1.788,16,0.702,20,0.939,21,0.096,26,0.02,27,0.02,49,0.521,60,0.586,63,1.29,64,0.586,65,1.041,66,0.843,67,0.843,68,0.843,69,0.843,70,1.661,71,2.465,72,2.589,77,2.907,78,2.162,79,0.843,80,1.33,81,0.66,82,0.843,83,1.454,84,0.66,85,0.822,86,1.33,87,1.33,88,1.33,89,1.33,90,1.464,91,2.826,92,1.647,93,1.647,94,1.647,95,1.647,96,1.647,97,1.647,98,1.797,99,1.041,100,0.744,101,1.041,102,0.744,103,1.693,104,0.66,105,0.843,106,1.693,107,0.744,108,1.29,109,2.072,110,0.843,111,0.843,112,0.843,113,0.843,114,0.843,115,1.041,116,0.744,117,0.843,118,0.843,119,0.843,120,0.843,121,0.843,122,0.843,123,0.843,124,0.843,125,0.843,126,0.843,127,0.843,128,0.843,129,0.843,130,0.66,131,0.744,252,1.608,253,1.608,254,1.608,255,1.608,256,1.608,257,1.608]],["title/coverage.html",[258,2.679]],["body/coverage.html",[0,2.073,1,1.762,5,0.498,6,2.397,11,0.046,18,1.365,21,0.129,26,0.032,27,0.032,34,1.545,53,2.073,55,2.397,59,1.365,61,2.397,62,2.727,63,1.21,64,1.984,70,0.955,85,0.955,90,1.21,99,1.21,101,1.21,103,1.21,106,1.21,108,1.21,115,1.21,130,1.21,149,1.762,150,2.397,173,1.545,180,1.365,206,2.397,225,2.397,246,2.397,258,2.033,259,2.948,260,2.948,261,2.948,262,5.661,263,3.955,264,5.317,265,2.948,266,2.948,267,2.948,268,3.955,269,3.955,270,4.974,271,2.397,272,2.948,273,2.948,274,2.948]],["title/dependencies.html",[31,1.805,275,1.962]],["body/dependencies.html",[11,0.046,17,1.574,26,0.038,27,0.038,31,2.009,49,1.242,81,1.574,83,1.775,250,3.117,251,3.117,276,5.052,277,3.834,278,3.834,279,3.834,280,3.834,281,3.834,282,3.834,283,3.834,284,3.834,285,3.834,286,3.834,287,3.834,288,3.834,289,3.834,290,3.834,291,3.834]],["title/miscellaneous/functions.html",[292,1.117,293,2.799]],["body/miscellaneous/functions.html",[7,0.845,11,0.041,26,0.041,27,0.041,34,2.788,271,3.521,292,2.005,293,3.521,294,4.331]],["title/index.html",[7,0.471,295,2.414,296,2.414]],["body/index.html",[4,0.527,11,0.046,26,0.033,27,0.033,258,2.151,297,3.119,298,3.119,299,4.106,300,3.119,301,3.119,302,3.119,303,3.119,304,3.119,305,3.119,306,2.535,307,4.59,308,3.119,309,3.119,310,3.119,311,3.119,312,4.59,313,5.305,314,3.119,315,3.119,316,3.119,317,5.203,318,3.119,319,3.119,320,4.106,321,3.119,322,3.119,323,3.119,324,3.119,325,4.106,326,4.106,327,3.119,328,3.119,329,3.119,330,4.106,331,4.106,332,3.119,333,3.119,334,3.119,335,3.119,336,3.119,337,2.535,338,3.119,339,3.119,340,3.119,341,3.119,342,3.119,343,3.119,344,3.119,345,3.119,346,3.119,347,3.119,348,2.535,349,3.119,350,3.119,351,3.119,352,3.119,353,3.119,354,3.119,355,2.535]],["title/modules.html",[30,2.036]],["body/modules.html",[11,0.04,26,0.04,27,0.04,29,2.554,30,2.24,40,2.24,337,4.06,356,4.994,357,4.994,358,4.994]],["title/overview.html",[359,3.158]],["body/overview.html",[2,1.897,11,0.044,18,2.279,26,0.036,27,0.036,28,1.897,29,3.234,30,1.897,31,1.897,32,2.496,33,2.496,34,1.897,35,2.496,36,2.496,37,2.942,38,2.942,39,2.942,40,2.836,41,3.115,42,2.496,43,2.496,54,2.496,60,1.32,180,2.541,197,2.942,198,2.942,199,2.942,359,2.942,360,4.924,361,3.62]],["title/properties.html",[65,1.414,275,1.962]],["body/properties.html",[11,0.045,26,0.04,27,0.04,65,1.754,306,3.474,348,3.474,355,3.474,362,4.274,363,4.274,364,4.274]],["title/miscellaneous/typealiases.html",[292,1.117,365,3.444]],["body/miscellaneous/typealiases.html",[7,0.845,11,0.041,26,0.041,27,0.041,64,1.579,70,1.403,84,2.066,292,2.005,366,4.331,367,3.521]],["title/miscellaneous/variables.html",[292,1.117,368,2.799]],["body/miscellaneous/variables.html",[7,0.742,11,0.045,26,0.038,27,0.038,64,1.387,99,1.912,100,1.761,101,1.912,102,1.761,106,1.912,107,1.761,109,2.492,115,1.912,116,1.761,130,1.912,131,1.761,292,1.761,367,4.376,368,3.092,369,5.383]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":363,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["10.0.6",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["16.4.5",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":360,"title":{},"body":{"overview.html":{}}}],["2.5.1",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":361,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["8.4.0",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":366,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":338,"title":{},"body":{"index.html":{}}}],["app",{"_index":315,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":305,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":207,"title":{},"body":{"injectables/FormService.html":{}}}],["author",{"_index":348,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":229,"title":{},"body":{"injectables/FormService.html":{}}}],["awardsandrecognition",{"_index":125,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["backendlanguages",{"_index":110,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["backers",{"_index":339,"title":{},"body":{"index.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/FormController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":358,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":356,"title":{},"body":{"modules.html":{}}}],["building",{"_index":300,"title":{},"body":{"index.html":{}}}],["certifications",{"_index":126,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["class",{"_index":21,"title":{"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["classes",{"_index":60,"title":{},"body":{"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"overview.html":{}}}],["cloudtechnologies",{"_index":113,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":197,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":198,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":199,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["companyname",{"_index":92,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["const",{"_index":98,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["constructor",{"_index":208,"title":{},"body":{"injectables/FormService.html":{}}}],["constructor(formmodel",{"_index":209,"title":{},"body":{"injectables/FormService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/FormController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"coverage.html":{}}}],["controller('form",{"_index":185,"title":{},"body":{"controllers/FormController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["coverage",{"_index":258,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":152,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/UpdateFormDto.html":{}}}],["create(@body",{"_index":186,"title":{},"body":{"controllers/FormController.html":{}}}],["create(createformdto",{"_index":157,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["createdform",{"_index":224,"title":{},"body":{"injectables/FormService.html":{}}}],["createdform.save",{"_index":227,"title":{},"body":{"injectables/FormService.html":{}}}],["createformdto",{"_index":59,"title":{"classes/CreateFormDto.html":{}},"body":{"classes/CreateFormDto.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/UpdateFormDto.html":{},"coverage.html":{}}}],["data",{"_index":162,"title":{},"body":{"controllers/FormController.html":{}}}],["databases",{"_index":112,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["default",{"_index":109,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["degree",{"_index":66,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["delete",{"_index":179,"title":{},"body":{"controllers/FormController.html":{}}}],["delete(':id",{"_index":170,"title":{},"body":{"controllers/FormController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":306,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":316,"title":{},"body":{"index.html":{}}}],["document",{"_index":80,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["documentation",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":182,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["dto/update",{"_index":184,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["e2e",{"_index":327,"title":{},"body":{"index.html":{}}}],["education",{"_index":63,"title":{"classes/Education.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["educationschema",{"_index":101,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":301,"title":{},"body":{"index.html":{}}}],["email",{"_index":120,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["enddate",{"_index":95,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["entities/form.entity",{"_index":221,"title":{},"body":{"injectables/FormService.html":{}}}],["env",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":312,"title":{},"body":{"index.html":{}}}],["exec",{"_index":236,"title":{},"body":{"injectables/FormService.html":{}}}],["existingform",{"_index":234,"title":{},"body":{"injectables/FormService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["express",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":247,"title":{},"body":{"classes/UpdateFormDto.html":{}}}],["feature.db",{"_index":204,"title":{},"body":{"modules/FormModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["findall",{"_index":153,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["findone",{"_index":154,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["findone(@param('id",{"_index":191,"title":{},"body":{"controllers/FormController.html":{}}}],["findone(id",{"_index":165,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["foreignlanguagesspoken",{"_index":128,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["forfeaturedb",{"_index":202,"title":{},"body":{"modules/FormModule.html":{}}}],["form",{"_index":85,"title":{"classes/Form.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["form.controller",{"_index":201,"title":{},"body":{"modules/FormModule.html":{}}}],["form.dto",{"_index":183,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/UpdateFormDto.html":{}}}],["form.dto.ts",{"_index":62,"title":{},"body":{"classes/CreateFormDto.html":{},"classes/UpdateFormDto.html":{},"coverage.html":{}}}],["form.service",{"_index":181,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["form/form.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["formcontroller",{"_index":149,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["formdocument",{"_index":84,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/typealiases.html":{}}}],["formmodel",{"_index":212,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodule",{"_index":40,"title":{"modules/FormModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["formschema",{"_index":130,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formservice",{"_index":180,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["found",{"_index":233,"title":{},"body":{"injectables/FormService.html":{}}}],["framework",{"_index":299,"title":{},"body":{"index.html":{}}}],["frontendlanguages",{"_index":111,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["fullname",{"_index":119,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["function",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":293,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":166,"title":{},"body":{"controllers/FormController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getters",{"_index":87,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["getting",{"_index":295,"title":{"index.html":{}},"body":{}}],["grow",{"_index":334,"title":{},"body":{"index.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":345,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":352,"title":{},"body":{"index.html":{}}}],["id",{"_index":168,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["identifier",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/FormService.html":{}},"body":{"injectables/AppService.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["injectmodel",{"_index":220,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(form.name",{"_index":222,"title":{},"body":{"injectables/FormService.html":{}}}],["installation",{"_index":311,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":314,"title":{},"body":{"index.html":{}}}],["institutionname",{"_index":67,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["jobtitle",{"_index":96,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["join",{"_index":341,"title":{},"body":{"index.html":{}}}],["jspdf",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":349,"title":{},"body":{"index.html":{}}}],["keyachievements",{"_index":97,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["license",{"_index":355,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":331,"title":{},"body":{"index.html":{}}}],["linkedinprofileurl",{"_index":122,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["location",{"_index":93,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["major",{"_index":68,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":163,"title":{},"body":{"controllers/FormController.html":{}}}],["metadata",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["miscellaneous",{"_index":292,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":330,"title":{},"body":{"index.html":{}}}],["mode",{"_index":320,"title":{},"body":{"index.html":{}}}],["model",{"_index":210,"title":{},"body":{"injectables/FormService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/FormModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":81,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{}}}],["mongoosemodule.forfeature(forfeaturedb",{"_index":205,"title":{},"body":{"modules/FormModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://gokul_sidharth:plvuqdflespixa46@cluster0.vtgu1hg.mongodb.net",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":344,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":350,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["nest",{"_index":307,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":354,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":250,"title":{},"body":{"classes/UpdateFormDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"classes/Education.html":{},"classes/Form.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":225,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["node.js",{"_index":298,"title":{},"body":{"index.html":{}}}],["node:process",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["notfoundexception",{"_index":219,"title":{},"body":{"injectables/FormService.html":{}}}],["notfoundexception(`form",{"_index":232,"title":{},"body":{"injectables/FormService.html":{}}}],["npm",{"_index":313,"title":{},"body":{"index.html":{}}}],["open",{"_index":332,"title":{},"body":{"index.html":{}}}],["optional",{"_index":161,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["overview",{"_index":359,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":275,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":178,"title":{},"body":{"controllers/FormController.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["partialtype",{"_index":249,"title":{},"body":{"classes/UpdateFormDto.html":{}}}],["partialtype(createformdto",{"_index":248,"title":{},"body":{"classes/UpdateFormDto.html":{}}}],["patch",{"_index":177,"title":{},"body":{"controllers/FormController.html":{}}}],["patch(':id",{"_index":174,"title":{},"body":{"controllers/FormController.html":{}}}],["phonenumber",{"_index":121,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["please",{"_index":342,"title":{},"body":{"index.html":{}}}],["post",{"_index":158,"title":{},"body":{"controllers/FormController.html":{}}}],["prefix",{"_index":151,"title":{},"body":{"controllers/FormController.html":{}}}],["private",{"_index":223,"title":{},"body":{"injectables/FormService.html":{}}}],["production",{"_index":322,"title":{},"body":{"index.html":{}}}],["proficiency",{"_index":105,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["progressive",{"_index":297,"title":{},"body":{"index.html":{}}}],["project",{"_index":333,"title":{},"body":{"index.html":{}}}],["promise",{"_index":214,"title":{},"body":{"injectables/FormService.html":{}}}],["prop",{"_index":77,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["prop({required",{"_index":71,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/WorkExperience.html":{}}}],["prop({type",{"_index":134,"title":{},"body":{"classes/Form.html":{},"classes/Skills.html":{}}}],["properties",{"_index":65,"title":{"properties.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["publications",{"_index":129,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["read",{"_index":343,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["reflect",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":155,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["remove(@param('id",{"_index":195,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(id",{"_index":169,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["repository",{"_index":310,"title":{},"body":{"index.html":{}}}],["required",{"_index":91,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}],["result",{"_index":237,"title":{},"body":{"injectables/FormService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["run",{"_index":317,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":302,"title":{},"body":{"index.html":{}}}],["schema",{"_index":78,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["schemafactory",{"_index":79,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["schemafactory.createforclass(education",{"_index":102,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(form",{"_index":131,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(skill",{"_index":107,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(skills",{"_index":116,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(workexperience",{"_index":100,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":303,"title":{},"body":{"index.html":{}}}],["side",{"_index":304,"title":{},"body":{"index.html":{}}}],["skill",{"_index":103,"title":{"classes/Skill.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["skills",{"_index":108,"title":{"classes/Skills.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["skillschema",{"_index":106,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skillsschema",{"_index":115,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["softskills",{"_index":114,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateFormDto.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/UpdateFormDto.html":{},"classes/WorkExperience.html":{},"index.html":{}}}],["sponsors",{"_index":336,"title":{},"body":{"index.html":{}}}],["src/.../form.entity.ts",{"_index":367,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/db/for",{"_index":203,"title":{},"body":{"modules/FormModule.html":{}}}],["src/form/dto/create",{"_index":61,"title":{},"body":{"classes/CreateFormDto.html":{},"coverage.html":{}}}],["src/form/dto/update",{"_index":246,"title":{},"body":{"classes/UpdateFormDto.html":{},"coverage.html":{}}}],["src/form/entities/form.entity.ts",{"_index":64,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/form/entities/form.entity.ts:100",{"_index":139,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:103",{"_index":137,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:106",{"_index":141,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:109",{"_index":140,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:112",{"_index":144,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:115",{"_index":148,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:118",{"_index":147,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:121",{"_index":136,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:124",{"_index":143,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:127",{"_index":132,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:130",{"_index":133,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:133",{"_index":146,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:136",{"_index":138,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:139",{"_index":142,"title":{},"body":{"classes/Form.html":{}}}],["src/form/entities/form.entity.ts:16",{"_index":252,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:19",{"_index":256,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:22",{"_index":257,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:25",{"_index":253,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:28",{"_index":254,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:31",{"_index":255,"title":{},"body":{"classes/WorkExperience.html":{}}}],["src/form/entities/form.entity.ts:39",{"_index":74,"title":{},"body":{"classes/Education.html":{}}}],["src/form/entities/form.entity.ts:42",{"_index":73,"title":{},"body":{"classes/Education.html":{}}}],["src/form/entities/form.entity.ts:45",{"_index":75,"title":{},"body":{"classes/Education.html":{}}}],["src/form/entities/form.entity.ts:48",{"_index":76,"title":{},"body":{"classes/Education.html":{}}}],["src/form/entities/form.entity.ts:56",{"_index":239,"title":{},"body":{"classes/Skill.html":{}}}],["src/form/entities/form.entity.ts:59",{"_index":240,"title":{},"body":{"classes/Skill.html":{}}}],["src/form/entities/form.entity.ts:67",{"_index":241,"title":{},"body":{"classes/Skills.html":{}}}],["src/form/entities/form.entity.ts:70",{"_index":244,"title":{},"body":{"classes/Skills.html":{}}}],["src/form/entities/form.entity.ts:73",{"_index":243,"title":{},"body":{"classes/Skills.html":{}}}],["src/form/entities/form.entity.ts:76",{"_index":242,"title":{},"body":{"classes/Skills.html":{}}}],["src/form/entities/form.entity.ts:79",{"_index":245,"title":{},"body":{"classes/Skills.html":{}}}],["src/form/entities/form.entity.ts:97",{"_index":145,"title":{},"body":{"classes/Form.html":{}}}],["src/form/form.controller.ts",{"_index":150,"title":{},"body":{"controllers/FormController.html":{},"coverage.html":{}}}],["src/form/form.controller.ts:11",{"_index":159,"title":{},"body":{"controllers/FormController.html":{}}}],["src/form/form.controller.ts:21",{"_index":164,"title":{},"body":{"controllers/FormController.html":{}}}],["src/form/form.controller.ts:26",{"_index":167,"title":{},"body":{"controllers/FormController.html":{}}}],["src/form/form.controller.ts:31",{"_index":175,"title":{},"body":{"controllers/FormController.html":{}}}],["src/form/form.controller.ts:36",{"_index":171,"title":{},"body":{"controllers/FormController.html":{}}}],["src/form/form.module.ts",{"_index":200,"title":{},"body":{"modules/FormModule.html":{}}}],["src/form/form.service.ts",{"_index":206,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["src/form/form.service.ts:14",{"_index":213,"title":{},"body":{"injectables/FormService.html":{}}}],["src/form/form.service.ts:19",{"_index":215,"title":{},"body":{"injectables/FormService.html":{}}}],["src/form/form.service.ts:23",{"_index":216,"title":{},"body":{"injectables/FormService.html":{}}}],["src/form/form.service.ts:31",{"_index":218,"title":{},"body":{"injectables/FormService.html":{}}}],["src/form/form.service.ts:39",{"_index":217,"title":{},"body":{"injectables/FormService.html":{}}}],["src/form/form.service.ts:9",{"_index":211,"title":{},"body":{"injectables/FormService.html":{}}}],["src/main.ts",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":318,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":321,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":323,"title":{},"body":{"index.html":{}}}],["started",{"_index":296,"title":{"index.html":{}},"body":{}}],["starteddate",{"_index":94,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["starter",{"_index":309,"title":{},"body":{"index.html":{}}}],["statements",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":346,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["submitted",{"_index":188,"title":{},"body":{"controllers/FormController.html":{}}}],["successfully",{"_index":189,"title":{},"body":{"controllers/FormController.html":{}}}],["summary",{"_index":123,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["support",{"_index":337,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":357,"title":{},"body":{"modules.html":{}}}],["table",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":326,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":329,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":328,"title":{},"body":{"index.html":{}}}],["tests",{"_index":325,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":335,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.formmodel(createformdto",{"_index":226,"title":{},"body":{"injectables/FormService.html":{}}}],["this.formmodel.find().exec",{"_index":228,"title":{},"body":{"injectables/FormService.html":{}}}],["this.formmodel.findbyid(id).exec",{"_index":230,"title":{},"body":{"injectables/FormService.html":{}}}],["this.formmodel.findbyidanddelete(id).exec",{"_index":238,"title":{},"body":{"injectables/FormService.html":{}}}],["this.formmodel.findbyidandupdate(id",{"_index":235,"title":{},"body":{"injectables/FormService.html":{}}}],["this.formservice.create(createformdto",{"_index":187,"title":{},"body":{"controllers/FormController.html":{}}}],["this.formservice.findall",{"_index":190,"title":{},"body":{"controllers/FormController.html":{}}}],["this.formservice.findone(id",{"_index":192,"title":{},"body":{"controllers/FormController.html":{}}}],["this.formservice.remove(id",{"_index":196,"title":{},"body":{"controllers/FormController.html":{}}}],["this.formservice.update(id",{"_index":194,"title":{},"body":{"controllers/FormController.html":{}}}],["throw",{"_index":231,"title":{},"body":{"injectables/FormService.html":{}}}],["timestamps",{"_index":89,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["tojson",{"_index":86,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["touch",{"_index":347,"title":{},"body":{"index.html":{}}}],["true",{"_index":72,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["twitter",{"_index":353,"title":{},"body":{"index.html":{}}}],["type",{"_index":70,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":365,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":251,"title":{},"body":{"classes/UpdateFormDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":308,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"classes/Form.html":{},"classes/Skills.html":{}}}],["unique",{"_index":117,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["unit",{"_index":324,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":364,"title":{},"body":{"properties.html":{}}}],["update",{"_index":156,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["update(@param('id",{"_index":193,"title":{},"body":{"controllers/FormController.html":{}}}],["update(id",{"_index":172,"title":{},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{}}}],["updateformdto",{"_index":173,"title":{"classes/UpdateFormDto.html":{}},"body":{"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/UpdateFormDto.html":{},"coverage.html":{}}}],["userid",{"_index":118,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["uuid",{"_index":83,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"dependencies.html":{}}}],["v4",{"_index":82,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["value",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":368,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":362,"title":{},"body":{"properties.html":{}}}],["virtuals",{"_index":88,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["volunteerwork",{"_index":127,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["watch",{"_index":319,"title":{},"body":{"index.html":{}}}],["website",{"_index":351,"title":{},"body":{"index.html":{}}}],["workexperience",{"_index":90,"title":{"classes/WorkExperience.html":{}},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{}}}],["workexperienceschema",{"_index":99,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["yearofgraduation",{"_index":69,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["yearsofexperience",{"_index":124,"title":{},"body":{"classes/Education.html":{},"classes/Form.html":{},"classes/Skill.html":{},"classes/Skills.html":{},"classes/WorkExperience.html":{}}}],["you'd",{"_index":340,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/FormModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFormModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { FormModule } from './form/form.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { env } from 'node:process'\n\n@Module({\n  imports: [FormModule,\n    MongooseModule.forRoot('mongodb+srv://Gokul_Sidharth:PLVUQDFLESpixa46@cluster0.vtgu1hg.mongodb.net/')\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFormDto.html":{"url":"classes/CreateFormDto.html","title":"class - CreateFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/dto/create-form.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFormDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Education.html":{"url":"classes/Education.html","title":"class - Education","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Education\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/entities/form.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                degree\n                            \n                            \n                                    \n                                institutionName\n                            \n                            \n                                    \n                                major\n                            \n                            \n                                    \n                                yearOfGraduation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        degree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        institutionName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        yearOfGraduation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuid } from 'uuid';\n\nexport type FormDocument = Form & Document;\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class WorkExperience {\n    @Prop({ required: true })\n    companyName: string;\n\n    @Prop({ required: true })\n    location: string;\n\n    @Prop({ required: true })\n    startedDate: string;\n\n    @Prop({ required: true })\n    endDate: string;\n\n    @Prop({ required: true })\n    jobTitle: string;\n\n    @Prop({ required: true })\n    keyAchievements: string;\n}\n\nexport const WorkExperienceSchema = SchemaFactory.createForClass(WorkExperience);\n\n@Schema()\nexport class Education {\n    @Prop({ required: true })\n    institutionName: string;\n\n    @Prop({ required: true })\n    degree: string;\n\n    @Prop({ required: true })\n    major: string;\n\n    @Prop({ required: true })\n    yearOfGraduation: string;\n}\n\nexport const EducationSchema = SchemaFactory.createForClass(Education);\n\n@Schema()\nexport class Skill {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    proficiency: string;\n}\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n\n@Schema()\nexport class Skills {\n    @Prop({ type: [SkillSchema], default: [] })\n    backendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    frontendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    databases: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    cloudTechnologies: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    softSkills: Skill[];\n}\n\nexport const SkillsSchema = SchemaFactory.createForClass(Skills);\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class Form {\n    @Prop({\n        type: String,\n        unique: true,\n        default: uuid,\n    })\n    userId: string;\n\n    @Prop({ required: true })\n    fullName: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    phoneNumber: string;\n\n    @Prop({ required: true })\n    linkedInProfileUrl: string;\n\n    @Prop({ required: true })\n    summary: string;\n\n    @Prop({ required: true })\n    yearsOfExperience: string;\n\n    @Prop({ type: [WorkExperienceSchema], default: [] })\n    workExperience: WorkExperience[];\n\n    @Prop({ type: [EducationSchema], default: [] })\n    education: Education[];\n\n    @Prop({ type: SkillsSchema, required: true })\n    skills: Skills;\n\n    @Prop({ required: true })\n    awardsAndRecognition: string;\n\n    @Prop({ required: true })\n    certifications: string;\n\n    @Prop({ required: true })\n    volunteerWork: string;\n\n    @Prop({ required: true })\n    foreignLanguagesSpoken: string;\n\n    @Prop({ required: true })\n    publications: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/entities/form.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                awardsAndRecognition\n                            \n                            \n                                    \n                                certifications\n                            \n                            \n                                    \n                                education\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                foreignLanguagesSpoken\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                linkedInProfileUrl\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                publications\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                summary\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                volunteerWork\n                            \n                            \n                                    \n                                workExperience\n                            \n                            \n                                    \n                                yearsOfExperience\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        awardsAndRecognition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        certifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        education\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Education[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        foreignLanguagesSpoken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        linkedInProfileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skills\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SkillsSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true, default: uuid})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        volunteerWork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        workExperience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkExperience[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        yearsOfExperience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuid } from 'uuid';\n\nexport type FormDocument = Form & Document;\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class WorkExperience {\n    @Prop({ required: true })\n    companyName: string;\n\n    @Prop({ required: true })\n    location: string;\n\n    @Prop({ required: true })\n    startedDate: string;\n\n    @Prop({ required: true })\n    endDate: string;\n\n    @Prop({ required: true })\n    jobTitle: string;\n\n    @Prop({ required: true })\n    keyAchievements: string;\n}\n\nexport const WorkExperienceSchema = SchemaFactory.createForClass(WorkExperience);\n\n@Schema()\nexport class Education {\n    @Prop({ required: true })\n    institutionName: string;\n\n    @Prop({ required: true })\n    degree: string;\n\n    @Prop({ required: true })\n    major: string;\n\n    @Prop({ required: true })\n    yearOfGraduation: string;\n}\n\nexport const EducationSchema = SchemaFactory.createForClass(Education);\n\n@Schema()\nexport class Skill {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    proficiency: string;\n}\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n\n@Schema()\nexport class Skills {\n    @Prop({ type: [SkillSchema], default: [] })\n    backendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    frontendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    databases: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    cloudTechnologies: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    softSkills: Skill[];\n}\n\nexport const SkillsSchema = SchemaFactory.createForClass(Skills);\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class Form {\n    @Prop({\n        type: String,\n        unique: true,\n        default: uuid,\n    })\n    userId: string;\n\n    @Prop({ required: true })\n    fullName: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    phoneNumber: string;\n\n    @Prop({ required: true })\n    linkedInProfileUrl: string;\n\n    @Prop({ required: true })\n    summary: string;\n\n    @Prop({ required: true })\n    yearsOfExperience: string;\n\n    @Prop({ type: [WorkExperienceSchema], default: [] })\n    workExperience: WorkExperience[];\n\n    @Prop({ type: [EducationSchema], default: [] })\n    education: Education[];\n\n    @Prop({ type: SkillsSchema, required: true })\n    skills: Skills;\n\n    @Prop({ required: true })\n    awardsAndRecognition: string;\n\n    @Prop({ required: true })\n    certifications: string;\n\n    @Prop({ required: true })\n    volunteerWork: string;\n\n    @Prop({ required: true })\n    foreignLanguagesSpoken: string;\n\n    @Prop({ required: true })\n    publications: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFormDto: CreateFormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/form/form.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFormDto\n                                            \n                                                            CreateFormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: any; message: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/form/form.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/form/form.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/form/form.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFormDto: UpdateFormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/form/form.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFormDto\n                                            \n                                                            UpdateFormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { FormService } from './form.service';\nimport { CreateFormDto } from './dto/create-form.dto';\nimport { UpdateFormDto } from './dto/update-form.dto';\n\n@Controller('form')\nexport class FormController {\n  constructor(private readonly formService: FormService) {}\n\n  @Post()\n  create(@Body() createFormDto: CreateFormDto) {\n     \n     return {\n      data: this.formService.create(createFormDto),\n      message: 'Submitted Successfully !',\n     }\n\n  }\n\n  @Get()\n  findAll() {\n    return this.formService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.formService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFormDto: UpdateFormDto) {\n    return this.formService.update(id, updateFormDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.formService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService \n\nFormService \n\n\n\nFormModule\n\nFormModule\n\nFormService  -->\n\nFormModule->FormService \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport forFeatureDb from 'src/db/for-feature.db';\n\n@Module({\n  controllers: [FormController],\n  providers: [FormService],\n  imports: [MongooseModule.forFeature(forFeatureDb)],\n  exports: [FormService]\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFormDto: CreateFormDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/form/form.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFormDto\n                                            \n                                                            CreateFormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/form/form.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/form/form.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/form/form.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFormDto: UpdateFormDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/form/form.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFormDto\n                                            \n                                                            UpdateFormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException  } from '@nestjs/common';\nimport { CreateFormDto } from './dto/create-form.dto';\nimport { UpdateFormDto } from './dto/update-form.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form, FormDocument } from './entities/form.entity';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class FormService {\n  constructor(\n    @InjectModel(Form.name) private readonly formModel: Model\n  ){}\n\n  async create(createFormDto: CreateFormDto): Promise {\n    const createdForm = new this.formModel(createFormDto);\n    return createdForm.save();\n  }\n\n  async findAll(): Promise {\n    return this.formModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    const form = await this.formModel.findById(id).exec();\n    if (!form) {\n      throw new NotFoundException(`Form with ID \"${id}\" not found`);\n    }\n    return form;\n  }\n\n  async update(id: string, updateFormDto: UpdateFormDto): Promise {\n    const existingForm = await this.formModel.findByIdAndUpdate(id, updateFormDto, { new: true }).exec();\n    if (!existingForm) {\n      throw new NotFoundException(`Form with ID \"${id}\" not found`);\n    }\n    return existingForm;\n  }\n\n  async remove(id: string): Promise {\n    const result = await this.formModel.findByIdAndDelete(id).exec();\n    if (!result) {\n      throw new NotFoundException(`Form with ID \"${id}\" not found`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Skill.html":{"url":"classes/Skill.html","title":"class - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/entities/form.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                proficiency\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        proficiency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuid } from 'uuid';\n\nexport type FormDocument = Form & Document;\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class WorkExperience {\n    @Prop({ required: true })\n    companyName: string;\n\n    @Prop({ required: true })\n    location: string;\n\n    @Prop({ required: true })\n    startedDate: string;\n\n    @Prop({ required: true })\n    endDate: string;\n\n    @Prop({ required: true })\n    jobTitle: string;\n\n    @Prop({ required: true })\n    keyAchievements: string;\n}\n\nexport const WorkExperienceSchema = SchemaFactory.createForClass(WorkExperience);\n\n@Schema()\nexport class Education {\n    @Prop({ required: true })\n    institutionName: string;\n\n    @Prop({ required: true })\n    degree: string;\n\n    @Prop({ required: true })\n    major: string;\n\n    @Prop({ required: true })\n    yearOfGraduation: string;\n}\n\nexport const EducationSchema = SchemaFactory.createForClass(Education);\n\n@Schema()\nexport class Skill {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    proficiency: string;\n}\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n\n@Schema()\nexport class Skills {\n    @Prop({ type: [SkillSchema], default: [] })\n    backendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    frontendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    databases: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    cloudTechnologies: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    softSkills: Skill[];\n}\n\nexport const SkillsSchema = SchemaFactory.createForClass(Skills);\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class Form {\n    @Prop({\n        type: String,\n        unique: true,\n        default: uuid,\n    })\n    userId: string;\n\n    @Prop({ required: true })\n    fullName: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    phoneNumber: string;\n\n    @Prop({ required: true })\n    linkedInProfileUrl: string;\n\n    @Prop({ required: true })\n    summary: string;\n\n    @Prop({ required: true })\n    yearsOfExperience: string;\n\n    @Prop({ type: [WorkExperienceSchema], default: [] })\n    workExperience: WorkExperience[];\n\n    @Prop({ type: [EducationSchema], default: [] })\n    education: Education[];\n\n    @Prop({ type: SkillsSchema, required: true })\n    skills: Skills;\n\n    @Prop({ required: true })\n    awardsAndRecognition: string;\n\n    @Prop({ required: true })\n    certifications: string;\n\n    @Prop({ required: true })\n    volunteerWork: string;\n\n    @Prop({ required: true })\n    foreignLanguagesSpoken: string;\n\n    @Prop({ required: true })\n    publications: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Skills.html":{"url":"classes/Skills.html","title":"class - Skills","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Skills\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/entities/form.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                backendLanguages\n                            \n                            \n                                    \n                                cloudTechnologies\n                            \n                            \n                                    \n                                databases\n                            \n                            \n                                    \n                                frontendLanguages\n                            \n                            \n                                    \n                                softSkills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        backendLanguages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cloudTechnologies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        databases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        frontendLanguages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        softSkills\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuid } from 'uuid';\n\nexport type FormDocument = Form & Document;\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class WorkExperience {\n    @Prop({ required: true })\n    companyName: string;\n\n    @Prop({ required: true })\n    location: string;\n\n    @Prop({ required: true })\n    startedDate: string;\n\n    @Prop({ required: true })\n    endDate: string;\n\n    @Prop({ required: true })\n    jobTitle: string;\n\n    @Prop({ required: true })\n    keyAchievements: string;\n}\n\nexport const WorkExperienceSchema = SchemaFactory.createForClass(WorkExperience);\n\n@Schema()\nexport class Education {\n    @Prop({ required: true })\n    institutionName: string;\n\n    @Prop({ required: true })\n    degree: string;\n\n    @Prop({ required: true })\n    major: string;\n\n    @Prop({ required: true })\n    yearOfGraduation: string;\n}\n\nexport const EducationSchema = SchemaFactory.createForClass(Education);\n\n@Schema()\nexport class Skill {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    proficiency: string;\n}\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n\n@Schema()\nexport class Skills {\n    @Prop({ type: [SkillSchema], default: [] })\n    backendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    frontendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    databases: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    cloudTechnologies: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    softSkills: Skill[];\n}\n\nexport const SkillsSchema = SchemaFactory.createForClass(Skills);\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class Form {\n    @Prop({\n        type: String,\n        unique: true,\n        default: uuid,\n    })\n    userId: string;\n\n    @Prop({ required: true })\n    fullName: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    phoneNumber: string;\n\n    @Prop({ required: true })\n    linkedInProfileUrl: string;\n\n    @Prop({ required: true })\n    summary: string;\n\n    @Prop({ required: true })\n    yearsOfExperience: string;\n\n    @Prop({ type: [WorkExperienceSchema], default: [] })\n    workExperience: WorkExperience[];\n\n    @Prop({ type: [EducationSchema], default: [] })\n    education: Education[];\n\n    @Prop({ type: SkillsSchema, required: true })\n    skills: Skills;\n\n    @Prop({ required: true })\n    awardsAndRecognition: string;\n\n    @Prop({ required: true })\n    certifications: string;\n\n    @Prop({ required: true })\n    volunteerWork: string;\n\n    @Prop({ required: true })\n    foreignLanguagesSpoken: string;\n\n    @Prop({ required: true })\n    publications: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFormDto.html":{"url":"classes/UpdateFormDto.html","title":"class - UpdateFormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/dto/update-form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFormDto } from './create-form.dto';\n\nexport class UpdateFormDto extends PartialType(CreateFormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkExperience.html":{"url":"classes/WorkExperience.html","title":"class - WorkExperience","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkExperience\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form/entities/form.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyName\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                jobTitle\n                            \n                            \n                                    \n                                keyAchievements\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                startedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        keyAchievements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/form/entities/form.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuid } from 'uuid';\n\nexport type FormDocument = Form & Document;\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class WorkExperience {\n    @Prop({ required: true })\n    companyName: string;\n\n    @Prop({ required: true })\n    location: string;\n\n    @Prop({ required: true })\n    startedDate: string;\n\n    @Prop({ required: true })\n    endDate: string;\n\n    @Prop({ required: true })\n    jobTitle: string;\n\n    @Prop({ required: true })\n    keyAchievements: string;\n}\n\nexport const WorkExperienceSchema = SchemaFactory.createForClass(WorkExperience);\n\n@Schema()\nexport class Education {\n    @Prop({ required: true })\n    institutionName: string;\n\n    @Prop({ required: true })\n    degree: string;\n\n    @Prop({ required: true })\n    major: string;\n\n    @Prop({ required: true })\n    yearOfGraduation: string;\n}\n\nexport const EducationSchema = SchemaFactory.createForClass(Education);\n\n@Schema()\nexport class Skill {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    proficiency: string;\n}\n\nexport const SkillSchema = SchemaFactory.createForClass(Skill);\n\n@Schema()\nexport class Skills {\n    @Prop({ type: [SkillSchema], default: [] })\n    backendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    frontendLanguages: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    databases: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    cloudTechnologies: Skill[];\n\n    @Prop({ type: [SkillSchema], default: [] })\n    softSkills: Skill[];\n}\n\nexport const SkillsSchema = SchemaFactory.createForClass(Skills);\n\n@Schema({\n    toJSON: {\n        getters: true,\n        virtuals: true,\n    },\n    timestamps: true,\n})\nexport class Form {\n    @Prop({\n        type: String,\n        unique: true,\n        default: uuid,\n    })\n    userId: string;\n\n    @Prop({ required: true })\n    fullName: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    phoneNumber: string;\n\n    @Prop({ required: true })\n    linkedInProfileUrl: string;\n\n    @Prop({ required: true })\n    summary: string;\n\n    @Prop({ required: true })\n    yearsOfExperience: string;\n\n    @Prop({ type: [WorkExperienceSchema], default: [] })\n    workExperience: WorkExperience[];\n\n    @Prop({ type: [EducationSchema], default: [] })\n    education: Education[];\n\n    @Prop({ type: SkillsSchema, required: true })\n    skills: Skills;\n\n    @Prop({ required: true })\n    awardsAndRecognition: string;\n\n    @Prop({ required: true })\n    certifications: string;\n\n    @Prop({ required: true })\n    volunteerWork: string;\n\n    @Prop({ required: true })\n    foreignLanguagesSpoken: string;\n\n    @Prop({ required: true })\n    publications: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/form/dto/create-form.dto.ts\n            \n            class\n            CreateFormDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/dto/update-form.dto.ts\n            \n            class\n            UpdateFormDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            class\n            Education\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            class\n            Skill\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            class\n            Skills\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            class\n            WorkExperience\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            variable\n            EducationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            variable\n            FormSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            variable\n            SkillSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            variable\n            SkillsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/entities/form.entity.ts\n            \n            variable\n            WorkExperienceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form/form.controller.ts\n            \n            controller\n            FormController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            dotenv : ^16.4.5\n        \n            jspdf : ^2.5.1\n        \n            mongoose : ^8.4.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFormModule->AppModule\n\n\n\n\n\nFormService \n\nFormService \n\nFormService  -->\n\nFormModule->FormService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FormDocument   (src/.../form.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/form/entities/form.entity.ts\n    \n    \n        \n            \n                \n                    \n                    FormDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EducationSchema   (src/.../form.entity.ts)\n                        \n                        \n                            FormSchema   (src/.../form.entity.ts)\n                        \n                        \n                            SkillSchema   (src/.../form.entity.ts)\n                        \n                        \n                            SkillsSchema   (src/.../form.entity.ts)\n                        \n                        \n                            WorkExperienceSchema   (src/.../form.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/form/entities/form.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EducationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Education)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FormSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Form)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkillSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Skill)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkillsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Skills)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WorkExperienceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(WorkExperience)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
